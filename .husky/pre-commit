echo "[🐶 Husky] Running pre-commit hook..."

# Get current branch
current_branch=$(git rev-parse --abbrev-ref HEAD)

# Skip checks if on main branch
if [ "$current_branch" = "main" ]; then
    echo "✅ On main branch, skipping update checks"
else
    echo "🔍 Checking for branch updates..."

    # Fetch latest changes
    git fetch origin

    # Check updates from main
    behind_commits=$(git rev-list --count $current_branch..origin/main)
    if [ "$behind_commits" -gt 0 ]; then
        echo "⚠️ Main branch has $behind_commits new commits!"
        echo "💡 Run: git pull origin main"
        exit 1
    fi
    echo "✅ Branch is up to date with main"

    # Check remote branch updates
    if git ls-remote --heads origin $current_branch | grep -q $current_branch; then
        remote_commits=$(git rev-list --count $current_branch..origin/$current_branch 2>/dev/null)
        if [ "$remote_commits" -gt 0 ]; then
            echo "⚠️ Remote branch has $remote_commits new commits!"
            echo "💡 Run: git pull origin $current_branch"
            exit 1
        fi
        echo "✅ Branch is up to date with remote"
    else
        echo "ℹ️ No remote branch found (new branch)"
    fi
fi

# Run sync script and handle changes
echo "🔄 Running sync script..."
yarn build

if [ $? -eq 0 ]; then
    if [ -n "$(git status --porcelain)" ]; then
        echo "📝 Changes detected, adding to commit..."
        git add .
    else
        echo "✅ No changes to sync"
    fi
else
    echo "❌ Sync script failed"
    exit 1
fi

# Run husky pre-commit script if exists
if yarn run --list 2>/dev/null | grep -q "husky:pre-commit"; then
    echo "🔍 Running pre-commit checks..."
    yarn husky:pre-commit
else
    echo "ℹ️ No husky:pre-commit script found"
fi

echo "[🐶 Husky] Done ✅"
exit 0
